//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class libWaifu2xPINVOKE {

    protected class SWIGExceptionHelper {

        public delegate void ExceptionDelegate(string message);
        public delegate void ExceptionArgumentDelegate(string message, string paramName);

        static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
        static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
        static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
        static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
        static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
        static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
        static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
        static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
        static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
        static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
        static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

        static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
        static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
        static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

        [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "SWIGRegisterExceptionCallbacks_libWaifu2x")]
        public static extern void SWIGRegisterExceptionCallbacks_libWaifu2x(
                                    ExceptionDelegate applicationDelegate,
                                    ExceptionDelegate arithmeticDelegate,
                                    ExceptionDelegate divideByZeroDelegate,
                                    ExceptionDelegate indexOutOfRangeDelegate,
                                    ExceptionDelegate invalidCastDelegate,
                                    ExceptionDelegate invalidOperationDelegate,
                                    ExceptionDelegate ioDelegate,
                                    ExceptionDelegate nullReferenceDelegate,
                                    ExceptionDelegate outOfMemoryDelegate,
                                    ExceptionDelegate overflowDelegate,
                                    ExceptionDelegate systemExceptionDelegate);

        [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "SWIGRegisterExceptionArgumentCallbacks_libWaifu2x")]
        public static extern void SWIGRegisterExceptionCallbacksArgument_libWaifu2x(
                                    ExceptionArgumentDelegate argumentDelegate,
                                    ExceptionArgumentDelegate argumentNullDelegate,
                                    ExceptionArgumentDelegate argumentOutOfRangeDelegate);

        static void SetPendingApplicationException(string message) {
            SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingArithmeticException(string message) {
            SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingDivideByZeroException(string message) {
            SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingIndexOutOfRangeException(string message) {
            SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingInvalidCastException(string message) {
            SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingInvalidOperationException(string message) {
            SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingIOException(string message) {
            SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingNullReferenceException(string message) {
            SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingOutOfMemoryException(string message) {
            SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingOverflowException(string message) {
            SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
        }
        static void SetPendingSystemException(string message) {
            SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
        }

        static void SetPendingArgumentException(string message, string paramName) {
            SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
        }
        static void SetPendingArgumentNullException(string message, string paramName) {
            global::System.Exception e = SWIGPendingException.Retrieve();
            if (e != null)
                message = message + " Inner Exception: " + e.Message;
            SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
        }
        static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
            global::System.Exception e = SWIGPendingException.Retrieve();
            if (e != null)
                message = message + " Inner Exception: " + e.Message;
            SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
        }

        static SWIGExceptionHelper() {
            SWIGRegisterExceptionCallbacks_libWaifu2x(
                                      applicationDelegate,
                                      arithmeticDelegate,
                                      divideByZeroDelegate,
                                      indexOutOfRangeDelegate,
                                      invalidCastDelegate,
                                      invalidOperationDelegate,
                                      ioDelegate,
                                      nullReferenceDelegate,
                                      outOfMemoryDelegate,
                                      overflowDelegate,
                                      systemDelegate);

            SWIGRegisterExceptionCallbacksArgument_libWaifu2x(
                                      argumentDelegate,
                                      argumentNullDelegate,
                                      argumentOutOfRangeDelegate);
        }
    }

    protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

    public class SWIGPendingException {
        [global::System.ThreadStatic]
        private static global::System.Exception pendingException = null;
        private static int numExceptionsPending = 0;
        private static global::System.Object exceptionsLock = null;

        public static bool Pending {
            get {
                bool pending = false;
                if (numExceptionsPending > 0)
                    if (pendingException != null)
                        pending = true;
                return pending;
            }
        }

        public static void Set(global::System.Exception e) {
            if (pendingException != null)
                throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
            pendingException = e;
            lock (exceptionsLock) {
                numExceptionsPending++;
            }
        }

        public static global::System.Exception Retrieve() {
            global::System.Exception e = null;
            if (numExceptionsPending > 0) {
                if (pendingException != null) {
                    e = pendingException;
                    pendingException = null;
                    lock (exceptionsLock) {
                        numExceptionsPending--;
                    }
                }
            }
            return e;
        }

        static SWIGPendingException() {
            exceptionsLock = new global::System.Object();
        }
    }


    protected class SWIGStringHelper {

        public delegate string SWIGStringDelegate(string message);
        static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

        [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "SWIGRegisterStringCallback_libWaifu2x")]
        public static extern void SWIGRegisterStringCallback_libWaifu2x(SWIGStringDelegate stringDelegate);

        static string CreateString(string cString) {
            return cString;
        }

        static SWIGStringHelper() {
            SWIGRegisterStringCallback_libWaifu2x(stringDelegate);
        }
    }

    static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


    static libWaifu2xPINVOKE() {
    }


    protected class SWIGWStringHelper {

        [return: global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]
        public delegate string SWIGWStringDelegate(global::System.IntPtr message);
        static SWIGWStringDelegate wstringDelegate = new SWIGWStringDelegate(CreateWString);

        [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "SWIGRegisterWStringCallback_libWaifu2x")]
        public static extern void SWIGRegisterWStringCallback_libWaifu2x(SWIGWStringDelegate wstringDelegate);

        static string CreateWString([global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)] global::System.IntPtr cString) {
            return global::System.Runtime.InteropServices.Marshal.PtrToStringUni(cString);
        }

        static SWIGWStringHelper() {
            SWIGRegisterWStringCallback_libWaifu2x(wstringDelegate);
        }
    }

    static protected SWIGWStringHelper swigWStringHelper = new SWIGWStringHelper();


    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_Clear")]
    public static extern void IntVector_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_Add")]
    public static extern void IntVector_Add(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_size")]
    public static extern uint IntVector_size(global::System.Runtime.InteropServices.HandleRef jarg1);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_capacity")]
    public static extern uint IntVector_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_reserve")]
    public static extern void IntVector_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_new_IntVector__SWIG_0")]
    public static extern global::System.IntPtr new_IntVector__SWIG_0();

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_new_IntVector__SWIG_1")]
    public static extern global::System.IntPtr new_IntVector__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_new_IntVector__SWIG_2")]
    public static extern global::System.IntPtr new_IntVector__SWIG_2(int jarg1);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_getitemcopy")]
    public static extern int IntVector_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_getitem")]
    public static extern int IntVector_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_setitem")]
    public static extern void IntVector_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_AddRange")]
    public static extern void IntVector_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_GetRange")]
    public static extern global::System.IntPtr IntVector_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_Insert")]
    public static extern void IntVector_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_InsertRange")]
    public static extern void IntVector_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_RemoveAt")]
    public static extern void IntVector_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_RemoveRange")]
    public static extern void IntVector_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_Repeat")]
    public static extern global::System.IntPtr IntVector_Repeat(int jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_Reverse__SWIG_0")]
    public static extern void IntVector_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_Reverse__SWIG_1")]
    public static extern void IntVector_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_SetRange")]
    public static extern void IntVector_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_Contains")]
    public static extern bool IntVector_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_IndexOf")]
    public static extern int IntVector_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_LastIndexOf")]
    public static extern int IntVector_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_IntVector_Remove")]
    public static extern bool IntVector_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_delete_IntVector")]
    public static extern void delete_IntVector(global::System.Runtime.InteropServices.HandleRef jarg1);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_delete_Waifu2xWrapper")]
    public static extern void delete_Waifu2xWrapper(global::System.Runtime.InteropServices.HandleRef jarg1);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_new_Waifu2xWrapper")]
    public static extern global::System.IntPtr new_Waifu2xWrapper();

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setInput")]
    public static extern void Waifu2xWrapper_setInput(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)] string jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setOutput")]
    public static extern void Waifu2xWrapper_setOutput(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)] string jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setNoise")]
    public static extern void Waifu2xWrapper_setNoise(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setScale")]
    public static extern void Waifu2xWrapper_setScale(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setTileSize")]
    public static extern void Waifu2xWrapper_setTileSize(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setModel")]
    public static extern void Waifu2xWrapper_setModel(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)] string jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setGpu")]
    public static extern void Waifu2xWrapper_setGpu(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setJobsLoad")]
    public static extern void Waifu2xWrapper_setJobsLoad(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setJobProc")]
    public static extern void Waifu2xWrapper_setJobProc(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setJobSave")]
    public static extern void Waifu2xWrapper_setJobSave(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setTtaMode")]
    public static extern void Waifu2xWrapper_setTtaMode(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_setFormat")]
    public static extern void Waifu2xWrapper_setFormat(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)] string jarg2);

    [global::System.Runtime.InteropServices.DllImport("Native/libWaifu2x", EntryPoint = "CSharp_Waifu2xWrapper_execute")]
    public static extern int Waifu2xWrapper_execute(global::System.Runtime.InteropServices.HandleRef jarg1);
}
